# author: @raj-ch017

"""

      Exercise 4

      In this exercise, we will define a function that encodes a message with any given encryption key.

      Instructions:
      
      alphabet, position and message remain defined from previous exercises.
      Define a function encoding that takes a message as input as well as an int encryption key key to encode a message with the 
      Caesar cipher by shifting each letter in message by key positions.

      Your function should return a string consisting of these encoded letters.
      Use encoding to encode message using key = 3 and save the result as encoded_message. Print encoded_message.
      
"""

#code:

def encoding(input_message,key):

    alphabet = " " + string.ascii_lowercase
    positions = {}

    for val in range(len(alphabet)):
        dict_key = alphabet[val]
        positions[dict_key] = val

    key_list = list(positions.keys())
    val_list = list(positions.values())
    encoded_message = ""

    for ele in input_message:
        current_val = positions[ele]
        new_val = current_val + key

        diff = (new_val % 27)
        if diff <= 26:
            ind = val_list.index(diff)
            new_ele = key_list[ind]
            encoded_message += new_ele

        elif diff > 26:
            ind = val_list.index(diff)
            new_ele = key_list[ind]
            encoded_message += new_ele

    print(encoded_message)
    
encoding(message,3)
