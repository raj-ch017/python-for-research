# author: @raj-ch017


"""

      Exercise 5

      In this exercise, we will join all the data summaries for text Hamlet translation.

      Instructions:
      
      The previous code for summarizing a particular translation of Hamlet is consolidated into a single function called summarize_text. 
      Create a pandas dataframegrouped_data consisting of the results of summarize_text for each translation of Hamlet in hamlets.
      Use a for loop across the row indices of hamlets to assign each translation to a new row.
      Obtain the ith row of hamlets to variables using the .iloc method, and assign the output to variables language and text.
      Call summarize_text using language and text, and assign the output to sub_data.
      Use the pandas .append() function to append to pandas dataframes row-wise to grouped_data.
      
"""

#code:

def summarize_text(language, text):
    counted_text = count_words_fast(text)

    data = pd.DataFrame({
        "word": list(counted_text.keys()),
        "count": list(counted_text.values())
    })
    
    data.loc[data["count"] > 10,  "frequency"] = "frequent"
    data.loc[data["count"] <= 10, "frequency"] = "infrequent"
    data.loc[data["count"] == 1,  "frequency"] = "unique"
    
    data["length"] = data["word"].apply(len)
    
    sub_data = pd.DataFrame({
        "language": language,
        "frequency": ["frequent","infrequent","unique"],
        "mean_word_length": data.groupby(by = "frequency")["length"].mean(),
        "num_words": data.groupby(by = "frequency").size()
    })
    
    return(sub_data)
    
grouped_data = pd.DataFrame()

for i in range(len(hamlets)):
    language, text = hamlets.iloc[i]
    sub_data = summarize_text(language,text)
    grouped_data = grouped_data.append(sub_data)
    
print(grouped_data.loc[grouped_data["frequency"] == "frequent"])

